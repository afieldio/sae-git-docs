{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25100\viewh14220\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs36 \cf0 SAE Catching up
\b0\fs24 \
\
	\

\b\fs32 Resources:
\b0\fs24 \
\

\fs28 Pro Git\
{\field{\*\fldinst{HYPERLINK "http://git-scm.com/book/en/Getting-Started-About-Version-Control"}}{\fldrslt http://git-scm.com/book/en/Getting-Started-About-Version-Control}}\
\
Visual Git \
{\field{\*\fldinst{HYPERLINK "http://marklodato.github.io/visual-git-guide/index-en.html"}}{\fldrslt http://marklodato.github.io/visual-git-guide/index-en.html}}
\fs24 \
\
\
\

\fs26 	
\b\fs32 wk 1 catchup:
\b0\fs30 \

\fs24 \
	
\fs28 	 - Wk 1 Lecture slides\
		-  Pro Git Chapters 1.1 -> 1.4 (skim these)\
		-  Pro Git Chapters 2.1 -> 2.4 (work through in detail)\
		-  Visual Git  'Basic Usage'\
\
		Knowledge check  \'85 do you understand ?\
			\
			yes							the three sections of the local repo (working directory, stage, history)           \
			initialise						git init                                               		                                                        \
			well it adds a file\'85.					git add 
\i file 
\i0 (when it hasn't been added before)\
			well\'85 it adds it again!?
\i 				
\i0 git add 
\i file 
\i0 (once it is being tracked)                                                                 			I\'92m committing I just don\'92t why
\i 			
\i0 git commit -m 
\i file                                                                                              
\i0 \
			\
			commits all!?
\i 					
\i0 git commit -a -m                                                                                              
\i 		       
\i0 Yes							git checkout HEAD 
\i file[s]\
\
			
\i0 list of stuff 					git status                                                                                    \
			a log of changes and stuff		git log\
			difference in stuff				git diff
\fs24 \
\
\
	
\b\fs32 wk 2 & wk 3 catchup:\
	
\b0\fs30 \

\fs26 		
\fs28 - Pro Git Chapter 2.6\
		- follow wk 3 slides\
		- Pro Git Chapters 3.1, 3.2, 3.3\
		- Visual Git 'Conventions' , \
				    'Commands in Detail'  - Commit, checkout, committing with a Detached HEAD, merge)\
\
\
		Knowledge check  \'85 do you understand ?\
\
			where are your local git files \
			the version of a file? 	what is a blob\
			what is a tree\
			what is a commit\
			what is the HEAD\
			what is a branch\
			\
			what happens to the current branch & HEAD when you commit\
			what happens when you make a new branch\
			how to switch the head to a different branch\
			the two types of merge\
			how a merge conflict occurs\
			how to resolve a merge conflict\
			\
			what is detached HEAD state\
\
			git checkout -b 
\i branchname\
			\
			
\i0 git reset 
\i commitAddress\
			
\i0 git reset 
\i branch name 
\i0 \
			git reset 
\i (--hard, --soft) 
\i0\fs26 \

\fs24     \
\

\b\fs32 	wk 4 catchup:
\fs30 \

\b0 \
	
\fs28 	- Wk 4 Lecture notes\
		- Pro Git Chapter 2.5\
		\
		Knowledge check  \'85 do you understand ?\
\
			how to clone a remote repo\
			how to initialise your own remote repo\
			how to update your local repo with remote changes\
			the difference between local and remote branch\
			what is a tracking branch\
			how to create a tracking branch\
			how to delete a remote branch\
		
\b \
			
\b0 - git remote\
			- git remote add url\
			- git branch -r\
			- git checkout remotename/remotebranchname\
			- git branch -r -d remotename/remotebranchname\
\
			- git push\
			- git push remotename\
			- git push remotename localbranch\
			- git push remotename localbranch:remotebranch\
			- git push remotename  :remotebranch\
			- git push -u remotename localbranch\
\
			- git fetch remotename\
			- git pull remotename (what's the difference)
\fs36 \
			\

\fs24 \
}